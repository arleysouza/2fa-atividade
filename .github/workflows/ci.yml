name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-server:
    name: Lint & Prettier (Server)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar dependências
        run: npm ci --prefix server

      - name: Rodar ESLint
        run: npm run lint --prefix server

      - name: Verificar formatação (Prettier)
        run: npm run format:check --prefix server

  lint-front:
    name: Lint & Prettier (Front)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar dependências
        run: npm ci --prefix front

      - name: Rodar ESLint
        run: npm run lint --prefix front

      - name: Verificar formatação (Prettier)
        run: npm run format:check --prefix front

  build-server:
    name: Build TypeScript (Server)
    runs-on: ubuntu-latest
    needs: lint-server
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar dependências
        run: npm ci --prefix server

      - name: Compilar código
        run: npm run build --prefix server

  trivy-scan:
    runs-on: ubuntu-latest
    needs: build-server
    steps:
      - uses: actions/checkout@v4

      - name: 🐳 Build Docker image
        run: docker build -t security-misconfig-app:latest -f server/Dockerfile ./server

      - name: 🔎 Run Trivy Scan (Summary)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'security-misconfig-app:latest'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'

      - name: 🔎 Run Trivy Scan (JSON Report)
        run: |
          trivy image --format json --output trivy-report.json security-misconfig-app:latest

      - name: 📤 Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

  snyk-scan:
    runs-on: ubuntu-latest
    needs: build-server
    steps:
      - uses: actions/checkout@v4

      # Instala dependências necessárias para o Snyk analisar
      - name: 📦 Install dependencies
        run: |
          cd server
          npm install

      # Scan das dependências Node.js (resumo no log)
      - name: 🧪 Run Snyk Scan (Node.js - Summary)
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --file=server/package.json --package-manager=npm --severity-threshold=high

      # Scan das dependências Node.js (JSON Report)
      - name: 🧪 Run Snyk Scan (Node.js - JSON Report)
        run: |
          cd server
          npx snyk test --json --file=package.json > ../snyk-node-report.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: 📤 Upload Snyk Node Report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-node-report
          path: snyk-node-report.json

  bench:
    runs-on: ubuntu-latest
    needs: build-server
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 📦 Build Docker images
        run: |
          docker compose -f docker-compose.yml -f docker-compose.ci.yml build

      - name: 🚀 Run containers
        run: |
          set -e
          # Start and wait for services to be healthy (respects healthchecks)
          docker compose -f docker-compose.yml -f docker-compose.ci.yml up -d --wait --wait-timeout 120 \
            || { echo "Services failed to become healthy"; \
                 docker compose -f docker-compose.yml -f docker-compose.ci.yml ps; \
                 docker compose -f docker-compose.yml -f docker-compose.ci.yml logs --no-color; \
                 exit 1; }
          docker compose -f docker-compose.yml -f docker-compose.ci.yml ps

      - name: 🛡 Run Docker Bench Security
        run: |
          set -e
          mkdir -p bench-logs
          docker run --rm --net host --pid host --userns host \
            --cap-add audit_control \
            -v /etc:/etc:ro \
            -v /var/lib:/var/lib:ro \
            -v /var/run/docker.sock:/var/run/docker.sock:ro \
            -v "$PWD/bench-logs":/output \
            docker/docker-bench-security -l /output/docker-bench-security.log || true
          ls -la bench-logs || true

      - name: 📤 Upload Docker Bench Report
        uses: actions/upload-artifact@v4
        with:
          name: docker-bench-security-report
          path: bench-logs/

      - name: 🛑 Stop containers
        if: always()
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml down
